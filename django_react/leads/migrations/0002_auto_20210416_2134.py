# Generated by Django 3.1.7 on 2021-04-17 01:34

import annoying.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('leads', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('img', models.ImageField(blank=True, default='', upload_to='AIAD')),
                ('link', models.URLField(blank=True, max_length=2000)),
                ('mission', models.TextField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Deleted', 'Deleted')], default='Active', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('mission', models.CharField(max_length=100)),
                ('depBanner', models.ImageField(blank=True, default='', upload_to='department_banner')),
                ('depLogo', models.ImageField(blank=True, default='', upload_to='department_logo')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Deleted', 'Deleted')], default='Active', max_length=50)),
                ('dac', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='DAC', to=settings.AUTH_USER_MODEL)),
                ('departmentHead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='departmentHead', to=settings.AUTH_USER_MODEL)),
                ('deputyHead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='deputyHead', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MemberList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('img', models.ImageField(blank=True, default='', upload_to='post_image')),
                ('link', models.URLField(blank=True, max_length=2000)),
                ('body', models.TextField(default='')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Deleted', 'Deleted')], default='Active', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('bPic', models.ImageField(default='defaultproban.jpg', upload_to='project_banner', verbose_name='Choose Your Project Banner Picture')),
                ('logo', models.ImageField(default='defaultlogo.jpg', upload_to='project_logo', verbose_name='Choose Your Project Logo')),
                ('department', models.CharField(choices=[('Behavioral Sciences and Leadership', 'Behavioral Sciences and Leadership'), ('Chemistry and Life Science', 'Chemistry and Life Science'), ('Civil and Mechanical Engineering', 'Civil and Mechanical Engineering'), ('Electrical Engineering and Comptuer Science', 'Electrical Engineering and Comptuer Science'), ('English and Philosophy', 'English and Philosophy'), ('Foreign Languages', 'Foreign Languages'), ('Geography and Environmental Engineering', 'Geography and Environmental Engineering'), ('History', 'History'), ('Law', 'Law'), ('Mathematical Sciences', 'Mathematical Sciences'), ('Physics and Nuclear Engineering', 'Physics and Nuclear Engineering'), ('Social Sciences', 'Social Sciences'), ('Systems Engineering', 'Systems Engineering'), ('Independent', 'Independent')], default='Independent', max_length=50)),
                ('purpose', models.CharField(max_length=50, null=True, verbose_name="Enter your project's purpose")),
                ('description', models.TextField(null=True, verbose_name='Please give a brief description of your project, progress, team, and goals.')),
                ('projectTag', multiselectfield.db.fields.MultiSelectField(choices=[('Data Analysis', 'Data Analysis'), ('3D Printing', '3D Printing'), ('Robotics', 'Robotics'), ('Coding', 'Coding'), ('Science', 'Science'), ('Drones', 'Drones'), ('Math', 'Math'), ('Chemistry', 'Chemistry'), ('Nuclear Engineering', 'Nuclear Engineering'), ('Physics', 'Physics'), ('Photonics', 'Photonics'), ('MATLAB', 'MATLAB'), ('SolidWorks', 'SolidWorks'), ('Writing', 'Writing'), ('Graphic Design', 'Graphic Design'), ('Design', 'Design'), ('Robotics', 'Robotics'), ('Business', 'Business'), ('Stocks', 'Stocks'), ('Hacking', 'Hacking'), ('Law', 'Law Studies'), ('Coding', 'Coding'), ('Environmental', 'Environment'), ('Lifestyle', 'Lifestyle'), ('Kinesiology', 'Kinesiology'), ('Health', 'Health'), ('Sleep', 'Sleep'), ('Psychology', 'Psychology'), ('Material Science', 'Material Science'), ('Batteries', 'Batteries'), ('Energy', 'Energy'), ('Fiber Optics', 'Fiber Optics'), ('Space', 'Space'), ('Autonomous Vehicles', 'Autonomous Vehicles'), ('Biology', 'Biology')], max_length=342, verbose_name='Choose Up To 5 Tags')),
                ('lookingFor', multiselectfield.db.fields.MultiSelectField(choices=[('Expert Cadets.', 'motivated cadets with niche expertise.'), ('Any cadet who wants to help.', 'cadets who want to learn and help.'), ('an engineering cadet.', 'an engineering Cadet'), ('a cadet with a scientific background.', 'a cadet with a scientific background'), ('cadets with programming experience.', 'cadets with programming experience'), ('Stem interests.', 'cadets with an interest in STEM.'), ('scholarship', 'cadets seeking scholarships from research'), ('a lot of work.', 'cadets who can work 10-20 hours a week'), ('anyone', 'anyone!'), ('Nothing', 'nothing at the moment')], max_length=197, verbose_name='What Does This Project Need')),
                ('recruiting', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50, verbose_name='Is This Project Currently Recruiting?')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Deleted', 'Deleted')], default='Active', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'projects',
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.BooleanField(default=False)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='leads.comment')),
                ('message', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='leads.message')),
                ('post', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='leads.post')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('bPic', models.ImageField(default='defaultproban.jpg', upload_to='project_banner')),
                ('logo', models.ImageField(default='defaultlogo.jpg', upload_to='project_logo')),
                ('department', models.CharField(choices=[('Behavioral Sciences and Leadership', 'Behavioral Sciences and Leadership'), ('Chemistry and Life Science', 'Chemistry and Life Science'), ('Civil and Mechanical Engineering', 'Civil and Mechanical Engineering'), ('Electrical Engineering and Comptuer Science', 'Electrical Engineering and Comptuer Science'), ('English and Philosophy', 'English and Philosophy'), ('Foreign Languages', 'Foreign Languages'), ('Geography and Environmental Engineering', 'Geography and Environmental Engineering'), ('History', 'History'), ('Law', 'Law'), ('Mathematical Sciences', 'Mathematical Sciences'), ('Physics and Nuclear Engineering', 'Physics and Nuclear Engineering'), ('Social Sciences', 'Social Sciences'), ('Systems Engineering', 'Systems Engineering'), ('Independent', 'Independent')], default='Independent', max_length=50)),
                ('description', models.CharField(max_length=50, null=True)),
                ('purpose', models.TextField()),
                ('projectTag', models.CharField(choices=[('Data Analysis', 'Data Analysis'), ('3D Printing', '3D Printing'), ('Robotics', 'Robotics'), ('Coding', 'Coding'), ('Aerodynamics', 'Aerodynamics')], default='Coding', max_length=32)),
                ('lookingFor', models.CharField(choices=[('motivated cadets with niche expertise.', 'Expert Cadets'), ('cadets who want to learn and help.', 'Any cadet who wants to help'), ('an engineering cadet.', 'Engineering Cadet'), ('a cadet with a scientific background.', 'Scientific background'), ('cadets with programming experience.', 'Coding Background')], default='an engineering cadet,', max_length=75)),
                ('recruiting', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Deleted', 'Deleted')], default='Active', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'teams',
            },
        ),
        migrations.CreateModel(
            name='userTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='userReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.reaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='userComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.comment')),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='uProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ifAccepted', models.BooleanField(default=False, null=True)),
                ('ifAdmin', models.BooleanField(default=False, null=True, verbose_name='Do you want this user to be a project Admin?')),
                ('title', models.CharField(max_length=100)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uProj', to='leads.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='u', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='uPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postType', models.CharField(choices=[('Tagged', 'Tagged'), ('Posted', 'Posted'), ('Liked', 'Liked')], default='Posted', max_length=50)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='uDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='teamReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.reaction')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.team')),
            ],
        ),
        migrations.CreateModel(
            name='teamComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.comment')),
                ('teamComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.team')),
            ],
        ),
        migrations.CreateModel(
            name='teamAIAD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AIAD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.aiad')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.team')),
            ],
        ),
        migrations.CreateModel(
            name='projPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postType', models.CharField(choices=[('Tagged', 'Tagged'), ('Posted', 'Posted'), ('Liked', 'Liked')], default='Posted', max_length=50)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.post')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.project')),
            ],
        ),
        migrations.CreateModel(
            name='projectTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.project')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.team')),
            ],
        ),
        migrations.CreateModel(
            name='projectReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.project')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.reaction')),
            ],
        ),
        migrations.CreateModel(
            name='projectComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.comment')),
                ('projectComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.project')),
            ],
        ),
        migrations.CreateModel(
            name='projDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.project')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(default='', max_length=25, verbose_name='First Name')),
                ('lastName', models.CharField(default='', max_length=25, verbose_name='Last Name')),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics', verbose_name='Profile Picture')),
                ('email', models.EmailField(default='', max_length=254)),
                ('first', models.BooleanField(default=True)),
                ('Department', models.CharField(choices=[('Behavioral Sciences and Leadership', 'Behavioral Sciences and Leadership'), ('Chemistry and Life Science', 'Chemistry and Life Science'), ('Civil and Mechanical Engineering', 'Civil and Mechanical Engineering'), ('Electrical Engineering and Comptuer Science', 'Electrical Engineering and Comptuer Science'), ('English and Philosophy', 'English and Philosophy'), ('Foreign Languages', 'Foreign Languages'), ('Geography and Environmental Engineering', 'Geography and Environmental Engineering'), ('History', 'History'), ('Law', 'Law'), ('Mathematical Sciences', 'Mathematical Sciences'), ('Physics and Nuclear Engineering', 'Physics and Nuclear Engineering'), ('Social Sciences', 'Social Sciences'), ('Systems Engineering', 'Systems Engineering'), ('Independent', 'Independent')], default='Independent', max_length=50)),
                ('Major', models.CharField(max_length=50, null=True)),
                ('Minor', models.CharField(blank=True, max_length=50, null=True)),
                ('interest', models.TextField(null=True, verbose_name='What Are Your Interests?')),
                ('expertise', models.TextField(null=True, verbose_name='Please list Your Areas of Expertise (separate by commas)')),
                ('research_goals', models.TextField(null=True, verbose_name='What Do You Want To Get Out Of Research?')),
                ('lookingFor', multiselectfield.db.fields.MultiSelectField(choices=[('a research team to join.', 'an established Research Team'), ('a project to work on.', 'a fun project to work on'), ('faculty to work under.', 'a faculty mentor'), ('nothing at the moment.', 'nothing at the moment'), ('start project', 'to start a research project'), ('anyone who needs help.', 'the opportunity to help other people however I can'), ('cadets looking to do research for three or four years.', 'cadets interested in research that works towards a scholarship'), ('cadets who want to join a project.', 'cadets who want to join a project'), ('AIADs.', 'AIADs')], max_length=226, verbose_name='What Are You Currently Looking For?')),
                ('title', models.CharField(choices=[('Faculty', 'Faculty'), ('Cadet', 'Cadet')], default='Cadet', max_length=50)),
                ('twitter', models.CharField(blank=True, default='@', max_length=30, null=True)),
                ('gradYear', models.IntegerField(blank=True, default=2023, null=True, verbose_name='Graduation Year')),
                ('company', models.CharField(blank=True, default='', max_length=2, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='', max_length=128, null=True, region=None)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Deleted', 'Deleted')], default='Active', max_length=50)),
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='postsAIAD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AIAD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.aiad')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.post')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(default='notification', max_length=200)),
                ('url', models.URLField(blank='', default='', null='')),
                ('ifViewed', models.BooleanField(default=False)),
                ('ifAccepted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, null=True)),
                ('text', models.CharField(max_length=300)),
                ('is_admin', models.BooleanField(null=True)),
                ('admins', models.ManyToManyField(limit_choices_to={'is_admin': True}, to=settings.AUTH_USER_MODEL)),
                ('memberlist', models.ManyToManyField(to='leads.MemberList')),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, default='', max_length=200)),
                ('url', models.URLField(blank='', default='', null='')),
                ('ifViewed', models.BooleanField(default=False)),
                ('ifAccepted', models.BooleanField(default=False)),
                ('accepter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepter', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requester', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='depPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postType', models.CharField(choices=[('Tagged', 'Tagged'), ('Posted', 'Posted'), ('Liked', 'Liked')], default='Posted', max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.post')),
            ],
        ),
        migrations.CreateModel(
            name='departmentTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.team')),
            ],
        ),
        migrations.CreateModel(
            name='departmentReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.reaction')),
            ],
        ),
        migrations.CreateModel(
            name='departmentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.comment')),
                ('departmentComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
            ],
        ),
        migrations.CreateModel(
            name='depAIAD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AIAD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.aiad')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.department')),
            ],
        ),
        migrations.CreateModel(
            name='commentAIAD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aiadComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.aiad')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.post'),
        ),
    ]
